// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskFamilyWeb.Models;

namespace TaskFamilyWeb.Models.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079");

            modelBuilder.Entity("TaskFamilyWeb.Models.Currency", b =>
                {
                    b.Property<int>("CurrencyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CharacterCode");

                    b.Property<string>("Description");

                    b.Property<string>("DigitalCode");

                    b.Property<short>("MarkRemoval")
                        .HasColumnType("bit(1)");

                    b.HasKey("CurrencyId");

                    b.ToTable("currencies");
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.CurrencyRates", b =>
                {
                    b.Property<int>("BaseCurrencyId");

                    b.Property<int>("CurrencyId");

                    b.Property<DateTime>("Period");

                    b.Property<int>("Multiplicity");

                    b.Property<decimal>("Rate");

                    b.HasKey("BaseCurrencyId", "CurrencyId", "Period");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CurrencyRates");
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateBegin");

                    b.Property<string>("Description");

                    b.Property<int>("FamilyId");

                    b.Property<short>("MarkRemoval")
                        .HasColumnType("bit(1)");

                    b.Property<int>("Periodicity");

                    b.HasKey("EventId");

                    b.HasIndex("FamilyId");

                    b.ToTable("events");
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.Family", b =>
                {
                    b.Property<int>("FamilyId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrencyId");

                    b.Property<string>("Description");

                    b.HasKey("FamilyId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Families");
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.MoveMoney", b =>
                {
                    b.Property<int>("MoveMoneyId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<DateTime>("Date");

                    b.Property<int>("InMove");

                    b.Property<int>("PurseId");

                    b.Property<decimal>("Total");

                    b.HasKey("MoveMoneyId");

                    b.HasIndex("PurseId");

                    b.ToTable("MovesMoney");
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.Purse", b =>
                {
                    b.Property<int>("PurseId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrencyId");

                    b.Property<DateTime>("Date");

                    b.Property<string>("Description");

                    b.Property<short>("Draft")
                        .HasColumnType("bit(1)");

                    b.Property<int>("FamilyId");

                    b.Property<short>("MarkRemoval")
                        .HasColumnType("bit(1)");

                    b.HasKey("PurseId");

                    b.HasIndex("CurrencyId");

                    b.HasIndex("FamilyId");

                    b.ToTable("purses");
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.ToDo", b =>
                {
                    b.Property<int>("ToDoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Comment");

                    b.Property<short>("Complete")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("DeadLine");

                    b.Property<string>("Description");

                    b.Property<string>("Detail");

                    b.Property<short>("Draft")
                        .HasColumnType("bit(1)");

                    b.Property<DateTime>("FactDate");

                    b.Property<int>("FamilyId");

                    b.Property<decimal>("PriceResult");

                    b.HasKey("ToDoId");

                    b.HasIndex("FamilyId");

                    b.ToTable("todos");
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.CurrencyRates", b =>
                {
                    b.HasOne("TaskFamilyWeb.Models.Currency", "BaseCurrency")
                        .WithMany()
                        .HasForeignKey("BaseCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaskFamilyWeb.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.Event", b =>
                {
                    b.HasOne("TaskFamilyWeb.Models.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.Family", b =>
                {
                    b.HasOne("TaskFamilyWeb.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.MoveMoney", b =>
                {
                    b.HasOne("TaskFamilyWeb.Models.Purse", "Purse")
                        .WithMany("MovesMoney")
                        .HasForeignKey("PurseId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.Purse", b =>
                {
                    b.HasOne("TaskFamilyWeb.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TaskFamilyWeb.Models.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TaskFamilyWeb.Models.ToDo", b =>
                {
                    b.HasOne("TaskFamilyWeb.Models.Family", "Family")
                        .WithMany()
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
